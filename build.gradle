plugins {
    id 'java'
    id 'io.quarkus'
    id "com.diffplug.spotless" version "5.12.4"
    id "org.openapi.generator" version "5.2.1"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-smallrye-openapi'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'app'
version 'v1'

spotless {
    java {
        target 'build/generated-src/**/*.java', 'src/*/java/**/*.java'

        googleJavaFormat('1.8')
    }
}
spotlessJava.dependsOn quarkusGenerateCode
spotlessJava.dependsOn quarkusGenerateCodeTests
// Since spotless consumes the source code generated by openApiGenerate, it is
// an implicit dependency. This setting makes the dependency explicit.
spotlessJava.dependsOn tasks.openApiGenerate

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

// An example in action:
// https://blog.samzhu.dev/2021/05/26/How-to-automatically-generate-interface-and-Data-Transfer-Object-from-OpenAPI-yaml-file/
openApiGenerate {
    // This setting causes the unified settings to be printed to stdout.
    verbose = true

    // Selecting the specific generator to use
    // https://openapi-generator.tech/docs/generators/jaxrs-resteasy
    generatorName = "jaxrs-resteasy"
    // https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaJerseyServerCodegen.java
    //generatorName = "jaxrs-jersey"
    // https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaJAXRSSpecServerCodegen.java
    //generatorName = "jaxrs-spec"

    inputSpec = "$rootDir/src/main/api/api.yaml"
    outputDir = "$buildDir/generated-src".toString()

    apiPackage = "org.openapi.example.api"
    invokerPackage = "org.openapi.example.invoker"
    modelPackage = "org.openapi.example.model"

    // This setting is supposed to be a file that lists the files to not
    // generate. This never worked in practice.
    ignoreFileOverride = "$rootDir/openapi-ignore"

    // This setting designates the directory where replacement templates will
    // reside. If a particular template exists in this directory, it will be
    // used. If a template doesn't exist, the default template will be used. If
    // the '$rootDir' isn't prefixed, some directory outside of the source tree
    // will be used. Since the override templates don't exist, nothing will
    // happen. In order to confirm that this setting is being interpreted as
    // expected, set `verbose = true` and look for the template value in the
    // debug output.
    // https://github.com/OpenAPITools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources
    templateDir = "$rootDir/src/main/templates"

    // According to documentation and examples, this is supposed to instruct
    // the generator to substitute classes. This never worked in practice. Some
    // import and class choices are directly embedded in the templates, and I
    // believe that is the reason these settings did not have the impact I was
    // expecting. Should that be the case, the utility of this section likely
    // varies depending on the value of `generatorName`.
    importMappings = [
        LinkedHashSet: 'java.util.ArrayList',
        ApiOperation:  'javax.ws.ws.Operation',
    ]

    // other settings omitted
    configOptions = [
        dateLibrary: "java8",
        interfaceOnly: "true",
        openApiNullable: "false",
        disallowAdditionalPropertiesIfNotPresent: "false",
        useTags: "true", // use tags for creating interface and controller classnames
        generateBuilders: "true",
    ]

    globalProperties = [
        // These values should constrain what files are generated. According to
        // the [documentation](https://openapi-generator.tech/docs/globals),
        // using the ignore file is preferred. However, the ignore file didn't
        // work.
        //models: "Book",
        models:     "", // generateModels
        modelDocs:  "false",
        modelTests: "false",
        apis:       "",
        apiDocs:    "false",
        apiTests:   "false"
    ]
}
// The Java source code generated by openApiGenerate will be added to the list
// of source directories to be compiled.
sourceSets.main.java.srcDirs += "$buildDir/generated-src/src/gen/java"
// The compileJava task needs to have the source code generation as a
// prerequisite.
compileJava.dependsOn tasks.openApiGenerate
// Make sure that the generated source code gets reformatted right after it is
// generated.
tasks.openApiGenerate.finalizedBy spotlessApply
